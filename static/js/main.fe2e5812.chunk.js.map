{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Profile.js","components/screens/Signin.js","components/screens/Signup.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","id","Home","alt","src","type","placeholder","Profile","Signin","history","useHistory","useState","email","setEmail","password","setPassword","requestOptions","method","headers","body","JSON","stringify","value","onChange","e","target","onClick","test","fetch","then","response","json","data","console","log","error","M","toast","html","classes","user","name","localStorage","setItem","token","push","Signup","setName","message","catch","App","Navbar","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe2e5812.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\n\nconst NavBar = () => {\n    return (\n        <nav>\n            <div className=\"nav-wrapper white\" >\n                <div className=\"nav-content\">\n                    <Link to=\"/\" className=\"brand-logo left\">Instagram</Link>\n                    <ul id=\"nav-mobile\" className=\"right\">\n                        <li><Link to=\"/signin\">Signin</Link></li>\n                        <li><Link to=\"/signup\">Signup</Link></li>\n                        <li><Link to=\"/profile\">Profile</Link></li>\n                    </ul>\n                </div>\n            </div>\n        </nav >\n\n    )\n}\n\nexport default NavBar\n\n","import React from 'react'\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"card post-card\">\n                <h6 className=\"postedUser\">Aswin</h6>\n                <div className=\"card-image\">\n                    <img alt=\"post\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/e35/102965697_566901277593692_8549877848484222783_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=108&_nc_ohc=nyNh-XSQxdwAX-bKqra&oh=ea374515e35d8ef5a89ef5e1eaecaa9a&oe=5F080F91\" />\n                </div>\n                <div className=\"card-content\">\n                    <i className=\"material-icons like-icon\">favorite</i>\n                    <h6>Title</h6>\n                    <p>body</p>\n                    <input type=\"text\" placeholder=\"Add a comment\"></input>\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n\n}\n\nexport default Home","import React from 'react'\n\nconst Profile = () => {\n\n    return (\n        <div className=\"profile\">\n\n            <div className=\"profile-info\">\n                <div >\n                    <img className=\"display-picture\" alt=\"dp\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-19/s150x150/96017536_238298287441287_4470569142725902336_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_ohc=ClnLPaiCcFMAX9rfp1U&oh=4cb3ee00eef79b6106d11f51e73eb895&oe=5F06A044\" />\n                </div>\n\n                <div >\n\n                    <h4>a.s.w.i.n_a.v</h4>\n                    <div className=\"stats\">\n                        <h6>31 posts</h6>\n                        <h6>607 followers</h6>\n                        <h6>1,576 following</h6>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div className=\"gallery\">\n\n                <img className=\"gallery-item\" alt=\"myphotos\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/sh0.08/e35/s750x750/83490711_118702709687730_366031290770410053_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=106&_nc_ohc=0kHSR4X7O6YAX_P11kH&oh=18fbe88d04c2f4befc587e52c8a3ebef&oe=5F0656F5\" />\n                <img className=\"gallery-item\" alt=\"myphotos\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/e35/s1080x1080/82588565_1004066983299776_3506119637627376849_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=108&_nc_ohc=TscBiDnpFPYAX8yWOp_&oh=2824ff4b80e801305de4ad4a0cf35143&oe=5F06F6B0\" />\n                <img className=\"gallery-item\" alt=\"myphotos\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/sh0.08/e35/s750x750/82772460_773288756482155_8020827340890508186_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=103&_nc_ohc=6Q2aYoSVzFEAX9-xY08&oh=ee10c7e10947fa8f3a28afc5a372130f&oe=5F05C9D2\" />\n                <img className=\"gallery-item\" alt=\"myphotos\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/e35/72270435_525680094953096_8764832016083178420_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=108&_nc_ohc=-OyiK3HBu-oAX898mvR&oh=a2916ae8d8ad8351593bc3e82ba0e223&oe=5F0509B3\" />\n                <img className=\"gallery-item\" alt=\"myphotos\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/sh0.08/e35/s750x750/71199792_825537917900596_6892033954532591162_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=104&_nc_ohc=07VoYGq4-tYAX8M0daR&oh=7a116e2af868df225529b1fd0c6b32c0&oe=5F066B43\" />\n                <img className=\"gallery-item\" alt=\"myphotos\" src=\"https://instagram.fcok4-1.fna.fbcdn.net/v/t51.2885-15/e35/75616345_426447751573794_7741125517492331551_n.jpg?_nc_ht=instagram.fcok4-1.fna.fbcdn.net&_nc_cat=106&_nc_ohc=JZa0NQDb1GYAX_NiLeT&oh=f88fee19892e54989cb833e51c346791&oe=5F07F971\" />\n\n\n            </div>\n\n\n        </div>\n    )\n\n}\n\nexport default Profile","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\n\n\nconst Signin = () => {\n\n    const history = useHistory()\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    };\n\n    const authCheck = () => {\n\n        /* eslint-disable-next-line */\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (password === \"\") {\n            M.toast({ html: \"Please input a valid password\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n\n\n        fetch('signin', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n\n                console.log(data)\n                if (data.error) {\n                    return M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n                }\n\n                M.toast({ html: \"Hi \" + data.user.name, classes: \"#388e3c green darken- 2\" })\n\n                localStorage.setItem(\"jwt\", data.token)\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\n                history.push(\"/\")\n\n            })\n\n    }\n    return (\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n                <h2 className=\"insta-heading\">Instagram</h2>\n                <input type=\"text\" value={email} onChange={(e) => {\n                    setEmail(e.target.value)\n                }} placeholder=\"Email\" />\n                <input type=\"password\" placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2 signin-button\"\n                    onClick={() => {\n                        authCheck()\n                    }}\n                >\n                    Signin\n                </button>\n                <h6>\n                    <Link to=\"/signup\">Don't have an account? </Link>\n                </h6>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default Signin\n","import React from 'react'\nimport { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\n\n\nconst Signup = () => {\n\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            name,\n            email,\n            password\n        })\n    };\n\n    const postData = () => {\n\n\n        /* eslint-disable-next-line */\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (name === \"\") {\n            M.toast({ html: \"Please input a valid name\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (password === \"\") {\n            M.toast({ html: \"Please input a valid password\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n        fetch('signup', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                if (data.message) {\n                    M.toast({ html: data.message, classes: \"#388e3c green darken- 2\" })\n                    history.push('/signin')\n                }\n                if (data.error) {\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n\n\n                }\n            }).catch(error => {\n                console.log(error)\n                M.toast({ html: error.message, classes: \"#c62828 red darken-3\" })\n\n            })\n    }\n\n    return (\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n                <h2 className=\"insta-heading\">Instagram </h2>\n                <input type=\"text\" placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => {\n                        setName(e.target.value)\n                    }}\n                />\n                <input type=\"text\" value={email} onChange={(e) => {\n                    setEmail(e.target.value)\n                }} placeholder=\"Email\" />\n                <input type=\"password\" placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2 signup-button\"\n                    onClick={() => postData()}>\n                    Signup\n                </button>\n\n                <h6>\n                    <Link to=\"/signin\">Have an account? </Link>\n                </h6>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Signup","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './components/screens/Home'\nimport Profile from './components/screens/Profile'\nimport Signin from './components/screens/Signin'\nimport Signup from './components/screens/Signup'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}