{"version":3,"sources":["components/Navbar.js","components/screens/Post.js","components/screens/Home.js","components/screens/Profile.js","components/screens/Signin.js","components/screens/Signup.js","components/screens/NewPost.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","useContext","UserContext","state","dispatch","history","useHistory","className","to","id","username","user","undefined","_id","console","log","key","onClick","localStorage","clear","type","push","renderList","Post","props","post","photo","title","body","postedBy","src","name","alt","placeholder","Home","baseURL","process","useState","posts","setPosts","isFetching","setIsFetching","Date","now","createdOnBefore","setCreatedOnBefore","requestOptions","method","headers","getItem","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","fetch","then","response","json","data","error","length","createdAt","removeEventListener","useEffect","newPosts","newDate","map","i","Profile","setName","dp","setDp","useParams","htmlFor","onChange","e","Signin","email","setEmail","password","setPassword","JSON","stringify","value","target","test","M","toast","html","classes","payload","setItem","token","Signup","message","catch","NewPost","setTitle","setBody","setPhoto","style","margin","maxWidth","padding","textAlign","files","formData","FormData","append","result","secure_url","submitPost","reducer","action","createContext","Routing","parse","exact","path","App","useReducer","Provider","Navbar","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03d4ec85.chunk.js","sourcesContent":["import React, { useContext,useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../App'\n\n\n\nconst NavBar = () => {\n\n    // let user = JSON.parse(localStorage.getItem(\"user\"))\n    // let username = \"1234\"\n\n    // if(user !==null && user!==undefined) {\n    //     username = user._id\n    // }\n\n    // useEffect(() => {\n\n    // },[])\n\n    const { state, dispatch } = useContext(UserContext)\n    const history = useHistory()\n\n    const renderList = () => {\n        if (state) {\n\n            let username = \"\"\n            if(state.user !==null && state.user!==undefined) {\n                username = state.user._id\n            }\n\n            console.log(\"Login Success, Navbar Initialization\")\n            console.log(state)\n            return [\n            <li key=\"profile\"><Link to={'/' + username} >Profile</Link></li>,\n                <li key=\"newpost\"><Link to=\"/newpost\">New Post</Link></li>,\n\n                <li key=\"logout\">\n\n                    <button className=\"btn waves-effect waves-light #e53935 red darken-1 \"\n                        onClick={() => {\n                            localStorage.clear(\"user\")\n                            dispatch({ type: \"CLEAR\" })\n                            history.push(\"/signin\")\n\n                        }}\n                    >\n                        Logout\n                </button>\n\n                </li>\n            ]\n        }\n        else {\n            return [\n                <li key=\"signin\"><Link to=\"/signin\">Signin</Link></li>,\n                <li key=\"signup\"><Link to=\"/signup\">Signup</Link></li>\n\n            ]\n        }\n    }\n    return (\n        <nav>\n            <div className=\"nav-wrapper white\" >\n                <div className=\"nav-content\">\n                    <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\">Instagram</Link>\n                    <ul id=\"nav-mobile\" className=\"right\">\n\n                        {renderList()}\n                    </ul>\n                </div>\n            </div>\n        </nav >\n\n    )\n}\n\nexport default NavBar\n\n","import React from 'react'\nimport { Link  } from 'react-router-dom'\nconst Post = (props) => {\n\n    const {photo,title,body,postedBy} = props.post;\n     \n    return (\n        <div className=\"post\">\n            <div className=\"card post-card\">\n    <div className = \"post-titlebar\">\n    \n    <Link to={'/' + postedBy._id} >\n    <img className = \"user-avatar-icon\" src={postedBy && postedBy.photo}/>\n    </Link>\n\n    <Link to={'/' + postedBy._id} >\n    <div className=\"postedUser\" >{postedBy && postedBy.name} </div> \n    </Link>\n    </div>\n    \n                <div className=\"card-image\">\n                    <img alt=\"post\" src={photo} />\n                </div>\n                <div className=\"card-content\">\n                    <i className=\"material-icons like-icon\">favorite</i>\n                    <h6>{title}</h6>\n                    <p>{body}</p>\n                    <input type=\"text\" placeholder=\"Add a comment\"></input>\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n\n}\n\nexport default Post","import React, { useEffect, useState } from 'react'\nimport Post from './Post.js'\nconst Home = () => {\n\n    const baseURL = process.env.REACT_APP_SERVICE_URI? process.env.REACT_APP_SERVICE_URI : 'http://localhost:5000'\n\n    const [posts,setPosts] = useState([])\n    const [isFetching, setIsFetching] = useState(false);\n    const [createdOnBefore,setCreatedOnBefore] = useState(Date.now())\n    const requestOptions = {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwt') },\n    };\n\n    useState(() => {\n\n        window.addEventListener('scroll', handleScroll);\n\n        fetch(baseURL + '/post/latest?createdOnBefore=' + createdOnBefore, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n\n                console.log(data)\n                \n                if (data.error) {\n                    console.log(data.error)\n                }\n\n                \n\n                if(data.posts !== undefined && data.posts.length !==0) {\n                    console.log(data.posts)\n                    setPosts(data.posts);\n                    \n                    setCreatedOnBefore(data.posts[data.posts.length -1].createdAt)\n                }\n\n\n                return () => {\n                    window.removeEventListener('scroll', handleScroll);\n                }\n\n            })\n        \n    },[])\n\n    useEffect(() => {\n  if (!isFetching) return;\n\n  function fetchMoreListItems() {\n  \n    fetch(baseURL +  '/post/latest?createdOnBefore=' + createdOnBefore, requestOptions)\n           .then(response => response.json())\n           .then(data => {\n\n               console.log(data.posts)\n               \n               if (data.error) {\n                   console.log(data.error)\n               }\n\n               if(data.posts !== undefined && data.posts.length !==0) {\n                   console.log(\"loading more posts : \")\n                   console.log(data.posts)\n                   let newPosts = [...posts,...data.posts]\n\n                   setPosts(newPosts);\n                   let newDate = newPosts[newPosts.length -1].createdAt\n                   setCreatedOnBefore(newDate)\n                   console.log(\"Data state updated\")\n                   console.log(posts)\n               }\n                   setIsFetching(false);\n\n\n\n           })\n\n}\n\n  fetchMoreListItems();\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [isFetching]);\n\n\n\n    function handleScroll() {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n\n    setIsFetching(true);\n\n    console.log('Scrolling detected');\n  }\n\n\n  \n  \n    return (\n\n        <div className=\"home\">\n        {\n            posts.map((post,i)=> {\n\n                return (\n                    <Post  \n                    key={i}\n                    post = {post} />\n                )\n\n            })\n        }\n           \n        </div>\n    )\n\n    \n}\n\nexport default Home","import React, { useState, useEffect,useContext } from 'react'\nimport { UserContext } from '../../App'\nimport {useParams} from \"react-router-dom\";\n\n\n\nconst Profile = (props) => {\n\n    const baseURL = process.env.REACT_APP_SERVICE_URI? process.env.REACT_APP_SERVICE_URI : 'http://localhost:5000'\n\n\n    const { state, dispatch } = useContext(UserContext)\n    const [posts,setPosts] = useState([])\n    const [name,setName] = useState('')\n    const [dp,setDp] = useState('')\n    const {username} = useParams()\n    const requestOptions = {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('jwt') },\n    };\n\n    useEffect(() => {\n\n        fetch(baseURL + '/user/' + username, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n\n                console.log(\"Profile Details loaded\")\n                console.log(data)                \n                if (data.error) {\n                    console.log(data.error)\n                }\n\n                if(data.user !== undefined && data.user.name !==undefined) {\n                setName(data.user.name)\n                }\n\n                if(data.user !== undefined && data.user.photo !==undefined) {\n                    setDp(data.user.photo)\n                    }\n            \n                if(data.posts !== undefined && data.posts.length !==0) {\n                    console.log(data.posts)\n                    setPosts(data.posts);\n \n                }\n\n            })\n        \n\n    },[]);\n\n    return (\n        <div className=\"profile\">\n\n            <div className=\"profile-info\">\n                <div className=\"dp-upload\">\n                <label htmlFor=\"dp-input\">\n                <img className=\"display-picture\" alt=\"dp\" src={dp ? dp: \"\"} />\n                </label>\n                <input id =\"dp-input\" type=\"file\"\n                onChange={(e) => {\n                    // setPhoto(e.target.files[0])\n                }} \n                 />\n                    \n                </div>\n\n                <div >\n\n                    <h4>{name ? name : \"Loading!!!!\"}</h4>\n                    <div className=\"stats\">\n                        <h6>31 posts</h6>\n                        <h6>607 followers</h6>\n                        <h6>1,576 following</h6>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div className=\"gallery\">\n\n            {\n            posts.map((post,i)=> {\n\n                return (\n                    <img key={i} className=\"gallery-item\" alt=\"myphotos\" src={post.photo} />\n\n                )\n\n            })\n        }\n\n            </div>\n\n\n        </div>\n    )\n\n}\n\nexport default Profile","import React, { useState, useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\n\nimport { UserContext } from '../../App'\n\n\nconst Signin = () => {\n\n    const baseURL = process.env.REACT_APP_SERVICE_URI? process.env.REACT_APP_SERVICE_URI : 'http://localhost:5000'\n\n\n    const { state, dispatch } = useContext(UserContext)\n    const history = useHistory()\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    };\n\n    const authCheck = () => {\n\n        /* eslint-disable-next-line */\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (password === \"\") {\n            M.toast({ html: \"Please input a valid password\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n\n\n        fetch(baseURL + '/signin', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n\n                console.log(data)\n                if (data.error) {\n                    return M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n                }\n\n                M.toast({ html: \"Hi \" + data.user.name, classes: \"#388e3c green darken- 2\" })\n                dispatch({ type: \"USER\", payload: data })\n                localStorage.setItem(\"jwt\", data.token)\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\n                history.push(\"/\")\n\n            })\n\n    }\n    return (\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n                <h2 className=\"insta-heading\">Instagram</h2>\n                <input type=\"text\" value={email} onChange={(e) => {\n                    setEmail(e.target.value)\n                }} placeholder=\"Email\" />\n                <input type=\"password\" placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2 signin-button\"\n                    onClick={() => {\n                        authCheck()\n                    }}\n                >\n                    Signin\n                </button>\n                <h6>\n                    <Link to=\"/signup\">Don't have an account? </Link>\n                </h6>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default Signin\n","import React from 'react'\nimport { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\n\n\nconst Signup = () => {\n\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            name,\n            email,\n            password\n        })\n    };\n\n    const postData = () => {\n\n        const baseURL = process.env.REACT_APP_SERVICE_URI? process.env.REACT_APP_SERVICE_URI : 'http://localhost:5000'\n\n\n\n        /* eslint-disable-next-line */\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (name === \"\") {\n            M.toast({ html: \"Please input a valid name\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (password === \"\") {\n            M.toast({ html: \"Please input a valid password\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n        fetch(baseURL + '/signup', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                if (data.message) {\n                    M.toast({ html: data.message, classes: \"#388e3c green darken- 2\" })\n                    history.push('/signin')\n                }\n                if (data.error) {\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n\n\n                }\n            }).catch(error => {\n                console.log(error)\n                M.toast({ html: error.message, classes: \"#c62828 red darken-3\" })\n\n            })\n    }\n\n    return (\n        <div className=\"mycard\">\n            <div className=\"card auth-card input-field\">\n                <h2 className=\"insta-heading\">Instagram </h2>\n                <input type=\"text\" placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => {\n                        setName(e.target.value)\n                    }}\n                />\n                <input type=\"text\" value={email} onChange={(e) => {\n                    setEmail(e.target.value)\n                }} placeholder=\"Email\" />\n                <input type=\"password\" placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => {\n                        setPassword(e.target.value)\n                    }}\n                />\n\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2 signup-button\"\n                    onClick={() => postData()}>\n                    Signup\n                </button>\n\n                <h6>\n                    <Link to=\"/signin\">Have an account? </Link>\n                </h6>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Signup","import React, { useContext , useState} from 'react'\nimport { UserContext } from '../../App'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport M from 'materialize-css'\n\nconst NewPost = () => {\n\n    const baseURL = process.env.REACT_APP_SERVICE_URI? process.env.REACT_APP_SERVICE_URI : 'http://localhost:5000'\n    const history = useHistory()\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [photo, setPhoto] = useState(\"\")\n\n    const submitPost = () => {\n\n        \n\n    if (title === \"\") {\n            M.toast({ html: \"Please input a valid title\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\n        if (body === \"\") {\n            M.toast({ html: \"Please input a valid body\", classes: \"#c62828 red darken-3\" })\n            return\n        }\n\nconst formData = new FormData();\n\nformData.append('file', photo);\nformData.append('upload_preset', 'insta-post');\nformData.append('cloud_name', 'dzfjtvyhe');\n\nfetch('https://api.cloudinary.com/v1_1/dzfjtvyhe/image/upload', {\n  method: 'PUT',\n  body: formData\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result.secure_url);\n\n  const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', \n                    'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n                 },\n        body: JSON.stringify({\n            title,\n            body,\n            photo : result.secure_url\n        })\n    };\n\n  fetch(baseURL + '/post', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                if (data.error) {\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n                    history.push('/')\n\n                }\n                else {\n                    \n                    M.toast({ html: 'SUCCESS', classes: \"#388e3c green darken- 2\" })\n                    history.push('/')\n                }\n                \n            }).catch(error => {\n                console.log(error)\n                M.toast({ html: error.message, classes: \"#c62828 red darken-3\" })\n\n            })\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n\n     \n\n\n    }\n\n\n    return (\n    <div className =\"card input-filed\"\n    style = {{\n        margin: \"20px auto\",\n        maxWidth: \"500px\",\n        padding : \"30px\",\n        textAlign : \"center\"\n    }}>\n\n        <input type=\"text\" placeholder=\"Title\"\n        value={title} onChange={(e) => {\n                    setTitle(e.target.value)\n                }} \n                 />\n        <input type=\"text\" placeholder=\"Body\" \n        value={body} onChange={(e) => {\n                    setBody(e.target.value)\n                }} />\n\n        <div className=\"file-field input-field\">\n      <div className=\"btn #64b5f6 blue darker-1\">\n        <span>Image</span>\n        <input type=\"file\"\n        onChange={(e) => {\n                    setPhoto(e.target.files[0])\n                }} \n                 />\n\n      </div>\n      <div className=\"file-path-wrapper\">\n        <input className=\"file-path validate\" type=\"text\" />\n      </div>\n\n      \n    </div>\n\n    <button className=\"btn waves-effect waves-light #64b5f6 blue darker-1 submit-post-button\"\n                    onClick={() => {\n                       submitPost()\n                    }}\n                >\n                    Submit Post\n     </button>\n\n    </div>\n    )\n\n}\n\nexport default NewPost","export const initialState = null\n\nexport const reducer = (state, action) => {\n    if (action.type === \"USER\") {\n        return action.payload\n    }\n\n    if (action.type === \"CLEAR\") {\n        state = null\n    }\n\n    return state\n}","import React, { useEffect, createContext, useReducer, useContext } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport { BrowserRouter, Route, useHistory, Switch } from 'react-router-dom';\nimport Home from './components/screens/Home'\nimport Profile from './components/screens/Profile'\nimport Signin from './components/screens/Signin'\nimport Signup from './components/screens/Signup'\nimport NewPost from './components/screens/NewPost'\nimport { reducer, initialState } from './reducers/userReducer'\n\nexport const UserContext = createContext()\n\n\nconst Routing = () => {\n\n  const history = useHistory()\n  const { state, dispatch } = useContext(UserContext)\n\n  useEffect(() => {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    if (user) {\n      dispatch({ type: \"USER\", payload: user })\n      history.push(\"/\")\n    }\n    else {\n      history.push(\"/signin\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/newpost\">\n        <NewPost />\n      </Route>\n\n      <Route path=\"/:username\">\n        <Profile />\n      </Route>\n    </Switch>\n\n  )\n}\n\n\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <UserContext.Provider value={{ state, dispatch }} >\n      <BrowserRouter>\n        <Navbar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}